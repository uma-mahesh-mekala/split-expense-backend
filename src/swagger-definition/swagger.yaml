openapi: 3.1.0
info:
    title: Split Expense Microservice
    description: |-
        This is backend Mircroservice for the Split Expense Application
    version: 1.0.0
tags:
    - name: User
paths:
    /users/signup:
        post:
            tags:
                - User
            summary: API for User signup service
            description: This api can be used to add a new user to the system.
            operationId: addUser
            requestBody:
                description: Adds new user to the system
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/userSignUpLoginRequest'
                required: true
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/userSignUpResponse'
                '400':
                    description: Invalid input
                '422':
                    description: Validation exception
    /users/login:
        post:
            tags:
                - User
            summary: API for User login service
            description: This api can be used to add a new user to the system.
            operationId: loginUser
            requestBody:
                description: Checks whether particular user exists in the system or not
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/userSignUpLoginRequest'
                required: true
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/userLoginResponse'
                '400':
                    description: Invalid input
                '422':
                    description: Validation exception
    /users/{user_id}/user:
        get:
            operationId: getUser
            security:
                - splitExpenseAuth: []
            parameters:
                - name: authorization
                  in: header
                  required: true
                  schema:
                      type: string
                      minLength: 1
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/getUserResponseSchema'
    /users/refresh/user:
        get:
            summary: Api to get new access token
            description: User can send their valid refreshToken to get a new access token
            operationId: refreshToken
            parameters:
                - name: refreshToken
                  in: header
                  required: true
                  schema:
                      type: string
                      example: abcdefghijklmnopqrstuvwxyz
            responses:
                '200':
                    description: successful operation
                    content:
                        'application/json':
                            schema:
                                $ref: '#/components/schemas/refreshTokenResponse'

components:
    securitySchemes:
        splitExpenseAuth:
            type: http
            scheme: bearer
    schemas:
        userSignUpLoginRequest:
            title: User Sign Up/ login Request
            type: object
            required:
                - email
                - password
            properties:
                email:
                    description: Email of the user
                    type: string
                    minLength: 1
                    maxLength: 50
                    example: user@gmail.com
                    x-error-message:
                        pattern: must follow a valid email pattern
                password:
                    description: Password of the user
                    type: string
                    example: Password@123
        userSignUpResponse:
            title: User Sign Up Response
            type: object
            properties:
                message:
                    description: message for the signup/login response
                    type: string
        userLoginResponse:
            title: User Sign Up Response
            type: object
            properties:
                message:
                    description: message for the signup/login response
                    type: string
                accessToken:
                    description: access token for authorization
                    type: string
                refreshToken:
                    description: refreshToken
                    type: string
                expiresIn:
                    description: expiry time for the access token in seconds from the time of generation
                    type: integer
        getUserResponseSchema:
            type: object
            properties:
                user_id:
                    type: integer
                    description: Unique Id of the user
                    example: 10
                email:
                    type: string
                    description: user email id
                    example: johndoe@gmail.com
        refreshTokenResponse:
            type: object
            properties:
                accessToken:
                    type: string
                    example: abcdefghijklmnopqrstuvwxyz
                refreshToken:
                    type: string
                    example: abcdefghijklmnopqrstuvwxyz
                expiresIn:
                    type: integer
                    example: 86400
